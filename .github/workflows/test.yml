name: Backend & Frontend Tests and Deployments

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-backend:
    name: 🛠 Backend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v3

      - name: ⚙️ Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: 📦 Install backend dependencies
        run: npm ci

      - name: ✅ Run backend tests
        run: npm run test

      - name: 📊 Generate backend coverage report
        run: npm run test:coverage

  test-frontend:
    name: 🖼 Frontend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v3

      - name: ⚙️ Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: 📦 Install frontend dependencies
        run: npm ci

      - name: ✅ Run frontend tests
        run: npm run test

  deploy-backend:
    name: 🚀 Deploy Backend
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    if: success() && github.ref == 'refs/heads/main'

    steps:
      - name: 🚀 Trigger Backend Render Deployment
        run: curl -X POST "$RENDER_BACKEND_DEPLOY_HOOK"
        env:
          RENDER_BACKEND_DEPLOY_HOOK: ${{ secrets.RENDER_BACKEND_DEPLOY_HOOK }}

  deploy-frontend:
    name: 🚀 Deploy Frontend
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    if: success() && github.ref == 'refs/heads/main'

    steps:
      - name: 🚀 Trigger Frontend Render Deployment
        run: curl -X POST "$RENDER_FRONTEND_DEPLOY_HOOK"
        env:
          RENDER_FRONTEND_DEPLOY_HOOK: ${{ secrets.RENDER_FRONTEND_DEPLOY_HOOK }}
